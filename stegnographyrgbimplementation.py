# -*- coding: utf-8 -*-
"""StegnographyRGBImplementation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VBCNFRmYtrQpi4qw2gxezTw6nCjFXnw9
"""

import cv2
import numpy as np
import string
import os
import matplotlib.pyplot as plt

d={chr(i):i for i in range(255)}
c={i:chr(i) for i in range(255)}



image_path = "/content/fruit.jpeg"
x=cv2.imread(image_path)
xrgb = cv2.cvtColor(x, cv2.COLOR_BGR2RGB)
plt.imshow(xrgb)
plt.title("Original Image")
plt.axis('off')
plt.show()

x.shape

key="123"
text="secret"

key

text_ascii=[d[ch] for ch in text]
key_ascii=[d[ch] for ch in key]
print(text_ascii)
print(key_ascii)

x_enc = x.copy()
n=0
m=0
z=0
l=len(text)
kl=0
for i in range(l):
  orig_val = x_enc[n,m,z]
  new_val = d[text[i]]^d[key[kl]]
  x_enc[n,m,z]=new_val
  print(f"Embedding '{text[i]}' (ASCII {d[text[i]]}) XOR '{key[kl]}' (ASCII {d[key[kl]]}) = {new_val} at pixel ({n},{m},{z}) [original={orig_val}]")
  n=n+1
  m=m+1
  m=(m+1)%3
  z=(z+1)%3
  kl=(kl+1)%len(key)

cv2.imwrite("encrypt.jpg",x_enc)

plt.imshow(cv2.cvtColor(x_enc,cv2.COLOR_BGR2RGB))
plt.title("Encrypted_Image")
plt.axis('off')
plt.show()

n,m,z=0,0,0
kl=0
decrypt=""
for i in range(l):
  val=x_enc[n,m,z]
  orig_char=c[val^d[key[kl]]]
  decrypt+=orig_char
  print(f"Decrypting pixel ({n},{m},{z}): {val} XOR {d[key[kl]]} = {val ^ d[key[kl]]} -> '{orig_char}'")
  n=n+1
  m=m+1
  m=(m+1)%3
  z=(z+1)%3
  kl=(kl+1)%len(key)
  print("Decrypted text:",decrypt)